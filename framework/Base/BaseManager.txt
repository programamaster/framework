using System;
using System.Reflection;
///<summary>
///创建人:赵晨晖
///功能说明:单例模式基类模块(三种都是懒汉模式的单例)
///</summary>
public abstract class BaseManager<T> where T : class
{
    private static T instance;
    //锁
    private static readonly object locker = new();

    public static T GetInstance()
    {
        if (instance == null)
        {
            lock (locker)
            {
                if (instance == null)
                {
                    Type type = typeof(T);
                    ConstructorInfo info = type.GetConstructor(BindingFlags.Instance | BindingFlags.NonPublic, null, Type.EmptyTypes, null);
                    instance = info.Invoke(null) as T;
                }
            }
        }
        return instance;
    }
}
