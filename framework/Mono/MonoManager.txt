using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using UnityEngine;
using UnityEngine.Events;
///<summary>
///创建人:赵晨晖
///功能说明:为了实现不继承Mono的脚本 可以开启携程，可以使用Update函数帧更新的方法
///</summary>
public class MonoManager : BaseManager<MonoManager>
{
    private MonoController controller;

    public MonoManager()
    {
        //保证了MonoController的唯一性
        GameObject gameObject = new GameObject("MonoController");
        controller = gameObject.AddComponent<MonoController>();
    }

    /// <summary>
    /// 给外部提供的 添加帧更新事件的函数
    /// </summary>
    /// <param name="action"></param>
    public void AddUpdateListen(UnityAction action)
    {
        controller.AddUpdateListen(action);
    }

    /// <summary>
    /// 给外部提供的 移除帧更新事件的函数
    /// </summary>
    /// <param name="action"></param>
    public void RemoveUpdateListen(UnityAction action)
    {
        controller.RemoveUpdateListen(action);
    }

    /// <summary>
    /// 清空所有的帧更新事件
    /// </summary>
    public void ClearAllListen()
    {
        controller.ClearAllListen();
    }

    #region 提供给外部 开启协程的方法
    public Coroutine StartCoroutine(IEnumerator routine)
    {
        return controller.StartCoroutine(routine);
    }
    #endregion

    #region 提供给外部 关闭协程的方法
    public void StopCoroutine(IEnumerator routine)
    {
        controller.StopCoroutine(routine);
    }
    #endregion 
}
